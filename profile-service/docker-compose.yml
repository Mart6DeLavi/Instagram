services:
  profile-service:
    image: eclipse-temurin:21-jre-alpine
    container_name: profile-service
    working_dir: /app
    volumes:
      - ./build/libs/profile-service-0.0.1-SNAPSHOT.jar:/app/app.jar
      - ./application-prod.yaml:/app/config/application-prod.yaml
    ports:
      - "8002:8002"
    environment:
      SPRING_PROFILES_ACTIVE: prod

      POSTGRES_URL: jdbc:postgresql://postgres-profile:5432/Instagram_Profile_Service
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: redispass

      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}

    command: ["java", "-jar", "app.jar"]
    depends_on:
      - discovery-server
      - postgres
      - redis
      - kafka

  discovery-server:
    image: discovery-server-discovery-service:latest
    ports:
      - "8761:8761"

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: Instagram_Profile_Service
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5436:5432"
    volumes:
      - profile_pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    command: redis-server --requirepass redispass
    ports:
      - "6379:6379"

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

volumes:
  profile_pgdata:
